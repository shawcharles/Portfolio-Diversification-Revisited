%==========================================================================
% mrs_EM_Smoother 
%==========================================================================

function [Ksi_tT,newP,newKsi_t1t_10,LogL,Ksi_tt] = mrs_EM_Smoother(Data,oldParam,oldP,oldKsi_t1t_10)

N = length(Data);
% Cond. dens. for the base regime (first column) and spike regime (second
% column)
sOldPhi = oldParam(2, 1);
sOldC = oldParam(2, 2);
sOldSigma2 = oldParam(2, 3);   
bOldPhi = oldParam(1, 1);
bOldC = oldParam(1, 2);
bOldSigma2 = oldParam(1, 3); 
Modelb = oldParam(1,4);
Model = oldParam(2,4);
Eta = [nan,nan;normpdf(Data(2:end), bOldPhi * Data(1:end-1) + bOldC, sqrt(bOldSigma2).*abs(Data(1:end-1)).^Modelb),...
      normpdf(Data(2:end), sOldPhi * Data(1:end-1) + sOldC, sqrt(sOldSigma2).*abs(Data(1:end-1)).^Model)];    
    
% Cond. prob. that t-th observation was generated by the base regime 
% (first column) or the spike regime (second column) based on the 
% knowledge of data up to time t
Ksi_tt = [oldKsi_t1t_10; zeros(N-1, 2)];

% Cond. prob. that (t+1)-st observation was generated by the base regime
% (first column) or the spike regime (second column) based on the 
% knowledge of data up to time t
Ksi_t1t = [oldKsi_t1t_10; zeros(N-1, 2)];

% Cond. prob. that t-th observation was generated by the base regime 
% (first column) or the spike regime (second column) based on the knowledge 
% of the whole data set (data up to time T), i.e. smoothed inferences
Ksi_tT = [oldKsi_t1t_10; zeros(N-1, 2)];

for row = 2:N
    Ksi_tt(row, :) = Eta(row, :) .* Ksi_t1t(row-1, :) / sum( Eta(row, :) .* Ksi_t1t(row-1, :) );
    Ksi_t1t(row, :) = Ksi_tt(row, :) * oldP;
end
Ksi_tT(end, :) = Ksi_tt(end, :);
for row = (N-1):-1:2
    Ksi_tT(row, :) = Ksi_tt(row, :) .* ( ( Ksi_tT(row+1, :) ./ Ksi_t1t(row, :) ) * oldP' );
end
    
% Log-likelihood
Aux = Eta(2:end,:) .* Ksi_tT(2:end,:);
LogL = sum(log(Aux(:,1) + Aux(:,2)));
  
% Transition probabilities
p_11 = sum( oldP(1,1) * Ksi_tT(3:end, 1) .* Ksi_tt(2:end-1, 1) ./ Ksi_t1t(2:end-1, 1) ) / sum( Ksi_tT(2:end-1, 1) );
p_22 = sum( oldP(2,2) * Ksi_tT(3:end, 2) .* Ksi_tt(2:end-1, 2) ./ Ksi_t1t(2:end-1, 2) ) / sum( Ksi_tT(2:end-1, 2) );


newP = [p_11, 1-p_11; 1-p_22, p_22];

newKsi_t1t_10 = Ksi_tT(2,:);
end